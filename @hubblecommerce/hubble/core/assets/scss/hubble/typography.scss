@import url('https://fonts.googleapis.com/css2?family=Karla:wght@400;700&display=swap');

@mixin font-size($fs-map, $fs-breakpoints: $grid-breakpoints) {
    @each $fs-breakpoint, $fs-font-size in $fs-map {
        @if $fs-breakpoint == null {
            @include make-font-size($fs-font-size);
        } @else {
            // If $fs-font-size is a key that exists in
            // $fs-breakpoints, use the value
            @if map-has-key($fs-breakpoints, $fs-breakpoint) {
                $fs-breakpoint: map-get($fs-breakpoints, $fs-breakpoint);
            }
            @media screen and (min-width: $fs-breakpoint) {
                @include make-font-size($fs-font-size);
            }
        }
    }
}

// Utility function for mixin font-size
@mixin make-font-size($fs-font-size) {
    // If $fs-font-size is a list, include
    // both font-size and line-height
    @if type-of($fs-font-size) == 'list' {
        font-size: nth($fs-font-size, 1);
        @if (length($fs-font-size) > 1) {
            line-height: nth($fs-font-size, 2);
        }
    } @else {
        font-size: $fs-font-size;
    }
}

/* Font Weight */
$font-weight-bold: 700;
$font-weight-medium: 500;
$font-weight-regular: 400;
$font-weight-light: 300;

/* Font Size + Line Height */
// Usage:
// define variable of $grid-breakpoints or set an individual breakpoint e.g. 600px
// first parameter is font-size, second is line-height
$text-font-sizes: (
    null: (
        14px,
        21px,
    ),
    md: (
        16px,
        24px,
    ),
    lg: (
        16px,
        24px,
    ),
);

$small-text-font-sizes: (
    null: (
        13px,
        21px,
    ),
    md: (
        14px,
        18px,
    ),
    lg: (
        14px,
        18px,
    ),
);

$h1-font-sizes: (
    null: (
        21px,
        24px,
    ),
    md: (
        31px,
        36px,
    ),
    lg: (
        31px,
        36px,
    ),
);

$h2-font-sizes: (
    null: (
        21px,
        24px,
    ),
    md: (
        24px,
        28px,
    ),
    lg: (
        24px,
        28px,
    ),
);

$h3-font-sizes: (
    null: (
        20px,
        23px,
    ),
    md: (
        22px,
        26px,
    ),
    lg: (
        22px,
        26px,
    ),
);

$h4-font-sizes: (
    null: (
        18px,
        22px,
    ),
    md: (
        20px,
        23px,
    ),
    lg: (
        20px,
        23px,
    ),
);

$h5-font-sizes: (
    null: (
        16px,
        19px,
    ),
    md: (
        18px,
        22px,
    ),
    lg: (
        18px,
        22px,
    ),
);

$h6-font-sizes: (
    null: (
        16px,
        19px,
    ),
    md: (
        18px,
        22px,
    ),
    lg: (
        18px,
        22px,
    ),
);

p,
.text {
    @include font-size($text-font-sizes);
    font-weight: $font-weight-regular;
    margin-bottom: $base-padding;
}

.text-small {
    @include font-size($small-text-font-sizes);
    font-weight: $font-weight-regular;
}

h1,
.headline-1 {
    @include font-size($h1-font-sizes);
    font-weight: $font-weight-regular;
}

h2,
.headline-2 {
    @include font-size($h2-font-sizes);
    font-weight: $font-weight-regular;
}

h3,
.headline-3 {
    @include font-size($h3-font-sizes);
    font-weight: $font-weight-regular;
}

h4,
.headline-4 {
    @include font-size($h4-font-sizes);
    font-weight: $font-weight-regular;
}

h5,
.headline-5 {
    @include font-size($h5-font-sizes);
    font-weight: $font-weight-bold;
}

h6,
.headline-6 {
    @include font-size($h6-font-sizes);
    font-weight: $font-weight-bold;
}
